name: Android CI

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - docs/**
      - README.md
      - LICENSE
  pull_request:
    branches:
      - develop
    paths-ignore:
      - docs/**
      - README.md
      - LICENSE

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # チェックアウト
    - uses: actions/checkout@v2

    # JDKのセットアップ
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    # Gradleのキャッシュ復元
    - uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Set up Ruby # gem を利用するので Ruby をセットアップ
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'
    - name: Get gem info
      env: # Danger で利用する gem をここで列挙
          PACKAGES: danger:6.2.0 danger-checkstyle_format:0.1.1 danger-android_lint:0.0.8 danger-junit:1.0.0
      id: gem-info
      run: |
            echo "::set-output name=dir::$(gem environment gemdir)" # キャッシュするgemのディレクトリ
            echo "::set-output name=packages::$PACKAGES" # install 用の文字列
            echo "::set-output name=key::$(echo $PACKAGES | tr ' ' '-')" # キャッシュのキー文字列
    - name: Restore gem cache # gem のキャッシュをリストア
      uses: actions/cache@v2
      with:
        path: ${{ steps.gem-info.outputs.dir }}
        key: ${{ runner.os }}-gem-${{ steps.gem-info.outputs.key }}

    # 依存関係の出力
    - name: Displays the Android dependencies of the project
      working-directory: ./Mobile
      run: ./gradlew androidDependencies

    # コンパイル
    - name: Run Compile
      working-directory: ./Mobile
      run: ./gradlew assembleDebug

  lint:
    runs-on: ubuntu-latest
    steps:
    # チェックアウト
    - uses: actions/checkout@v2

    # 静的解析
    - name: Run Inspection
      working-directory: ./Mobile
      run: ./gradlew lint
      
    - name: Set up and run Danger
      if: cancelled() != true # 中断されない限り、エラーでも実行
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 標準で利用できるトークンを利用
        JOB_STATUS: ${{ job.status }} # jobのステータスを Danger へ受け渡す
      run: |
          gem install ${{ steps.gem-info.outputs.packages }}
          danger --dangerfile='.github/workflows/android_ci.danger' --remove-previous-comments --fail-on-errors=true

    # 結果の表示
    - name: Show results on GitHub
      uses: yutailang0119/action-android-lint@v1
      with:
        xml_path: '**/build/reports/lint-results-*.xml'

    # アーティファクトへアップロード
    - name: Upload results Artifact
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: results
        path: |
          **/build/reports/lint-results-*.html
          **/build/reports/lint-results-*.xml
        if-no-files-found: error
        retention-days: 14

  ktlint:
    runs-on: ubuntu-latest
    steps:
    # チェックアウト
    - uses: actions/checkout@v2

    # インストール
    - name: Install ktlint
      run: |
        curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.42.1/ktlint
        chmod a+x ktlint
        sudo mv ktlint /usr/local/bin/

    # 静的解析
    - name: Lint with ktlint
      run: ktlint --reporter=checkstyle,output=build/ktlint-report.xml
      continue-on-error: true

    # 結果の表示
    - name: Show results on GitHub
      uses: yutailang0119/action-ktlint@v1
      with:
        xml_path: build/ktlint-report.xml

    # アーティファクトへアップロード
    - name: Upload results Artifact
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: results
        path: |
          **/build/ktlint-report.xml
        if-no-files-found: error
        retention-days: 14
